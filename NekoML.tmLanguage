<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>nml</string>
	</array>
	<key>foldingStartMarker</key>
	<string>(\{\s*(//.*)?$|^\s*// \{\{\{|#if)</string>
	<key>foldingStopMarker</key>
	<string>^\s*(\}|// \}\}\}$|#end)</string>
	<key>keyEquivalent</key>
	<string>^~H</string>
	<key>name</key>
	<string>NekoML</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#constants</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#function-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#keywords</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nekoml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>/\*\*/</string>
					<key>name</key>
					<string>comment.block.empty.nekoml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>text.html.javadoc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments-inline</string>
				</dict>
			</array>
		</dict>
		<key>comments-inline</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>captures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nekoml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.nekoml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>comment.line.double-slash.nekoml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.comment.nekoml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\s*((//).*$\n?)</string>
				</dict>
			</array>
		</dict>
		<key>constants</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(true|false|null)\b</string>
					<key>name</key>
					<string>constant.language.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\.?[0-9]*)|(\.[0-9]+))((e|E)(\+|-)?[0-9]+)?)\b</string>
					<key>name</key>
					<string>constant.numeric.nekoml</string>
				</dict>
			</array>
		</dict>
		<key>constructor</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nekoml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.type.class.nekoml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(new)\s+(([a-z]+\.)*[A-Z][\w\.\&lt;\&gt;]*)</string>
				</dict>
			</array>
		</dict>
		<key>function-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.nekoml</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.recursive.nekoml</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.nekoml</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(function)(\s+rec)?(\s+[_A-Za-z]\w*)[&lt;\w&gt;,]*\s*\(</string>
				</dict>
			</array>
		</dict>
		<key>keywords</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b(try|catch|throw|exception)\b</string>
					<key>name</key>
					<string>keyword.control.catch-exception.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\w+\s*\?\s*\w+\s*:</string>
					<key>name</key>
					<string>keyword.control.ternary-if.nekoml</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.nekoml.flow-control</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b(if|else|return|while|for|type|match|then|when|open|function|neko|mutable)\b\s*</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(:=|==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;|&gt;)</string>
					<key>name</key>
					<string>keyword.operator.comparison.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(=)</string>
					<key>name</key>
					<string>keyword.operator.assignment.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-\-|\+\+)</string>
					<key>name</key>
					<string>keyword.operator.increment-decrement.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(\-|\+|\*[^\w]|\/|%)</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(!|&amp;&amp;|\|\|)</string>
					<key>name</key>
					<string>keyword.operator.logical.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bprint\b</string>
					<key>name</key>
					<string>keyword.other.print.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>;</string>
					<key>name</key>
					<string>punctuation.terminator.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\bvar\b</string>
					<key>name</key>
					<string>keyword.other.variable.nekoml</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b(Args|Array|Buffer|Core|Hashtbl|Int32|IO|LexEngine|Lexer|List|Map|Math|Net|Reflect|Regexp|Set|Stack|String|Sys|Xml|Zip)\b</string>
					<key>name</key>
					<string>support.type.nekoml</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>&quot;</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.nekoml</string>
						</dict>
					</dict>
					<key>end</key>
					<string>&quot;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.nekoml</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.nekoml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\\.</string>
							<key>name</key>
							<string>constant.character.escape.nekoml</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(&apos;\\?.&apos;)</string>
					<key>name</key>
					<string>string.quoted.single.nekoml</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.nekoml</string>
	<key>uuid</key>
	<string>6ED422A4-9B8C-451E-A585-6869F16122A2</string>
</dict>
</plist>
